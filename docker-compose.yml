services:
  pg:
    image: postgres:16
    environment:
      POSTGRES_DB: tf_logs
      POSTGRES_USER: tf
      POSTGRES_PASSWORD: tfpwd
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tf -d tf_logs -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 30

  backend:
    build:
      context: backend
    environment:
      SPRING_PROFILES_ACTIVE: pg
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg:5432/tf_logs
      SPRING_DATASOURCE_USERNAME: tf
      SPRING_DATASOURCE_PASSWORD: tfpwd
      LOGVIEWER_INGEST_HTTP_MODE: ${LOGVIEWER_INGEST_HTTP_MODE:-rest}
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - "9090:9090"
      - "8081:8080"

  envoy:
    image: envoyproxy/envoy:v1.31-latest
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "-l", "info"]
    volumes:
      - ./infra/envoy.yaml:/etc/envoy/envoy.yaml:ro
    depends_on:
      backend:
        condition: service_started
    ports:
      - "8080:8080"
      - "9901:9901"

  frontend:
    image: node:20
    working_dir: /app
    command: sh -lc "npm install && npm run dev -- --host 0.0.0.0 --port 5173 && cd ../app && npm ci"
    environment:
      VITE_GRPC_WEB_BASE: http://envoy:8080
      VITE_REST_BASE: http://envoy:8080
      VITE_INGEST_MODE: ${VITE_INGEST_MODE:-rest}
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      envoy:
        condition: service_started

volumes:
  pgdata:
